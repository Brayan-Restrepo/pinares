// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ApartmentsColumns holds the columns for the "apartments" table.
	ApartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "area", Type: field.TypeInt16},
		{Name: "floor", Type: field.TypeInt16},
		{Name: "number", Type: field.TypeInt16},
		{Name: "apartment_owner", Type: field.TypeInt, Nullable: true},
		{Name: "tower_apartments", Type: field.TypeInt, Nullable: true},
	}
	// ApartmentsTable holds the schema information for the "apartments" table.
	ApartmentsTable = &schema.Table{
		Name:       "apartments",
		Columns:    ApartmentsColumns,
		PrimaryKey: []*schema.Column{ApartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "apartments_users_owner",
				Columns:    []*schema.Column{ApartmentsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "apartments_towers_apartments",
				Columns:    []*schema.Column{ApartmentsColumns[5]},
				RefColumns: []*schema.Column{TowersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TowersColumns holds the columns for the "towers" table.
	TowersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number_of_floors", Type: field.TypeInt},
		{Name: "number_of_apartments_per_floor", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "registered_at", Type: field.TypeTime},
	}
	// TowersTable holds the schema information for the "towers" table.
	TowersTable = &schema.Table{
		Name:       "towers",
		Columns:    TowersColumns,
		PrimaryKey: []*schema.Column{TowersColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApartmentsTable,
		TowersTable,
		UsersTable,
	}
)

func init() {
	ApartmentsTable.ForeignKeys[0].RefTable = UsersTable
	ApartmentsTable.ForeignKeys[1].RefTable = TowersTable
}
